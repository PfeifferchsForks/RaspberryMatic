var x=x||{};x.hub=x.hub||{};x.hub.m=x.hub.m||{};x.hub.m.mbus=x.hub.m.mbus||{};x.hub.m.mbus.MODULE=require("xnm.aio.mbus.js");
x.hub.m.mbus.Monitor=function(){var e={sendSTAEvent:function(a){var c=require("x.hub.eventbus.js");c.emit("gatewayevent",a,{address:"MBUS"},"STA");c.emit("udpevent",a,"STA")}},b=function(){this._logger=require("x.logger.js").getLogger("x.hub.m.mbus.Monitor");this._bus=this._port=null;this._statesBuffer={}};b.DEFAULT_PORT="/dev/mediolabus";b.prototype.start=function(a){this._port=a;this._port||(this._port=b.DEFAULT_PORT);this._logger.log("info","start monitor port:"+this._port);if(null==this._bus){var c=
this;this._bus=new x.hub.m.mbus.MODULE.MediolaBus(this._port);this._bus.on("data",function(d){c._logger.log("trace","receive mbus data:"+JSON.stringify(d));c._onData(d)});this._bus.on("error",function(d){c._logger.log("warn","mbus error:"+d.message)});this._bus.open()}};b.prototype.stop=function(){this._bus.on("data",null);this._bus.on("error",null);this._bus.close();this._bus=null};b.prototype.executeCommand=function(a,c,d){this._bus?a&&a.address&&a.type&&a.data?c&&c.command?(this._logger.log("trace",
'execute command "'+c.command+'" for device '+JSON.stringify(a)),this._bus.executeCommand(a,c.command),d&&d()):d&&d(Error("invalid command")):d&&d(Error("invalid device")):d&&d(Error("mbus not connect"))};b.prototype.getBufferedStates=function(){return this._statesBuffer};b.prototype.updateStates=function(a,c){this._logger.log("trace","update state for devices "+JSON.stringify(a));this._bus.updateStates(a);c&&c()};b.prototype._onData=function(a){if(a&&a.source){var c={states:a,timestamp:(new Date).getTime()};
this._statesBuffer[a.source]=c;e.sendSTAEvent({type:"MBUS",adr:a.source,state:a})}};return b}();
x.hub.m.mbus.Handler=function(){var e=function(){this._logger=require("x.logger.js").getLogger("x.hub.m.mbus.Handler");this._monitor=null};e.prototype.init=function(b){var a=this,c=require("x.hub.eventbus.js");c.on("x.hub.peripheralman.ADD_MBUS",function(d){a._logger.log("debug","mbus usb connected");a._logger.log("info","start mbus monitor");a._start()});c.on("x.hub.peripheralman.REMOVE_MBUS",function(d){a._logger.log("debug","mbus usb disconnected");a._logger.log("info","stop mbus monitor");a._stop()});
global.MBUS_PORT&&"A20"!=global.PLATFORM&&"PI-CM3+"!=global.PLATFORM&&(this._logger.log("info","connect mbus usb:"+global.MBUS_PORT),this._start());b&&b()};e.prototype._start=function(){this._monitor||(this._monitor=new x.hub.m.mbus.Monitor,this._monitor.start(global.MBUS_PORT))};e.prototype._stop=function(){this._monitor&&(this._monitor.stop(),this._monitor=null)};e.prototype.getSystems=function(){return["mbus"]};e.prototype.getAllStatesLegacy=function(b){if(this._monitor){var a=[],c=this._monitor.getBufferedStates();
if(c)for(var d in c)a.push({type:"MBUS",adr:d,state:c[d].states});b&&b({data:a})}else b&&b({data:[]})};e.prototype.executeCommandLegacy=function(b,a){this._monitor?b&&b.address&&b.subtype&&b.data&&b.command?this._monitor.executeCommand({address:b.address,type:b.subtype,data:b.data},{command:b.command},function(c){a&&a({error:c})}):a&&a({error:Error("command invalid")}):a&&a({error:Error("mbus module not running")})};e.prototype.updateStates=function(b,a){this._monitor?b&&b.length?this._monitor.updateStates(b,
function(c){a&&a({error:c})}):a&&a({error:Error("no address")}):a&&a({error:Error("mbus module not running")})};e.prototype.dummyMbusMessage=function(b,a){b?this._monitor?(this._monitor._onData(b),a&&a()):a&&a({error:{message:"mbus module not running"}}):a&&a({error:{message:"invalid message"}})};return e}();"undefined"!=typeof exports&&"undefined"!=typeof module&&module.exports&&(exports=module.exports=new x.hub.m.mbus.Handler);
