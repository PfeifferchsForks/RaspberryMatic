--- occu/WebUI/bin/hm_autoconf.orig
+++ occu/WebUI/bin/hm_autoconf
@@ -316,14 +316,57 @@
       # Erzeugt eine Systemvariable, bindet diese an einen Kanal und liefert ihre Id zurÃ¼ck
       ##
       proc _create_sv_ {name info channelId} {
+        # get selected systemLanguage from /etc/config/systemLanguage
+        set lang "none"
+        if {[catch {set fp [open /etc/config/systemLanguage r]}] == 0} {
+          if { $fp >= 0 } {
+            set lang [string trim [read $fp]]
+            close $fp
+          }
+        }
+
+        set trName ""
+        set trMsg ""
+        if { $name == "\${sysVarRainToday}" } {
+          set trName "sysVarRainToday"
+          set trMsg "sysVarRainTodayDescr"
+          if { $lang == "de" } {
+            set name "Regen heute"
+            set info "Regenmenge aktueller Tag"
+          } elseif { $lang == "en" } {
+            set name "Rain today"
+            set info "Rainfall current day"
+          } else {
+            set trName ""
+            set trMsg ""
+          }
+        } elseif { $name == "\${sysVarRainYesterday}" } {
+          set trName "sysVarRainYesterday"
+          set trMsg "sysVarRainYesterdayDescr"
+          if { $lang == "de" } {
+            set name "Regen gestern"
+            set info "Regenmenge vorheriger Tag"
+          } elseif { $lang == "en" } {
+            set name "Rain yesterday"
+            set info "Rainfall previous day"
+          } else {
+            set trName ""
+            set trMsg ""
+          }
+        }
+
         set    script "var name = \"$name\";\n"
         append script "var info = \"$info\";\n"
         append script "var channelId = \"$channelId\";\n"
+        append script "var trName = \"$trName\";\n"
+        append script "var trMsg = \"$trMsg\";\n"
         append script {
           var channel = dom.GetObject(channelId);
           var sv = dom.CreateObject(OT_VARDP, name);
           dom.GetObject(ID_SYSTEM_VARIABLES).Add(sv.ID());
+          if(trName != "") { sv.AddMetaData("trID", trName); }
           sv.DPInfo(info);
+          if(trMsg != "") { sv.AddMetaData("trIDMsg", trMsg); }
           sv.ValueUnit("mm");
           sv.ValueType( ivtFloat );
           sv.ValueSubType( istGeneric );
--- occu/WebUI/www/api/methods.conf.orig
+++ occu/WebUI/www/api/methods.conf
@@ -1062,6 +1062,20 @@
   ARGUMENTS {_session_id_}
 }
 
+CCU.getSystemLanguage {
+  LEVEL ADMIN
+  SCRIPT_FILE ccu/getsystemlanguage.tcl
+  INFO {Gibt die eingestellte Systemsprache zurueck}
+  ARGUMENTS {_session_id_}
+}
+
+CCU.setSystemLanguage {
+  LEVEL ADMIN
+  SCRIPT_FILE ccu/setsystemlanguage.tcl
+  INFO {Setzt die Systemsprache in /etc/config/systemLanguage}
+  ARGUMENTS {_session_id_ lang}
+}
+
 CCU.restartSSHDaemon {
   LEVEL ADMIN
   SCRIPT_FILE ccu/restartsshdaemon.tcl
--- occu/WebUI/www/api/methods/ccu/getsystemlanguage.tcl.orig
+++ occu/WebUI/www/api/methods/ccu/getsystemlanguage.tcl
@@ -0,0 +1,21 @@
+##
+# CCU.getSystemLanguage
+# Gibt die momentan eingestellte Systemsprache der CCU aus der
+# /etc/config/systemLanguage Datei zurueck.
+#
+# Parameter:
+#  keine
+#
+# Rückgabewert: [string]
+#  Kuerzel der Systemsprache (de, en) oder none
+##
+
+set lang "none"
+if {[catch {set fp [open /etc/config/systemLanguage r]}] == 0} {
+  if { $fp >= 0 } {
+    set lang [string trim [read $fp]]
+    close $fp
+  }
+}
+
+jsonrpc_response [json_toString $lang]
--- occu/WebUI/www/api/methods/ccu/setsystemlanguage.tcl.orig
+++ occu/WebUI/www/api/methods/ccu/setsystemlanguage.tcl
@@ -0,0 +1,259 @@
+##
+# CCU.setSystemLanguage
+# Setzt die Systemsprache der CCU in /etc/config/systemLanguage
+# und benennt die Namen aller Gewerke, Raeume und Standard-Systemvariablen
+# in die jeweilige Sprache um.
+#
+# Parameter:
+#  lang         : [string] Die gewaehlte Systemsprache (de, en)
+#
+# Rückgabewert: immer true
+##
+
+proc setSystemLanguage {a} {
+
+  array set args $a
+
+  # define rega script
+  set script {
+
+    string oID;
+    string metaDataID = "trID";
+
+    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+    ! Functions
+    string funcDefault      = "funcLight;funcHeating;funcClimateControl;funcWeather;funcEnvironment;funcSecurity;funcLock;funcButton;funcCentral;funcEnergy";
+    string funcTranslatedDE = "Licht;Heizung;Klima;Wetter;Umwelt;Sicherheit;Verschluss;Taster;Zentrale;Energiemanagement";
+    string funcTranslatedEN = "Light;Heating;Climatic conditions;Weather;Environment;Security;Lock;Button;Central;Energy management";
+
+    string funcTranslatedNew;
+    string funcTranslatedOld;
+    if(lang == "de") {
+      funcTranslatedNew = funcTranslatedDE;
+      funcTranslatedOld = funcTranslatedEN;
+    } else {
+      funcTranslatedNew = funcTranslatedEN;
+      funcTranslatedOld = funcTranslatedDE;
+    }
+
+    object funcs = dom.GetObject(ID_FUNCTIONS);
+    foreach(oID, funcs.EnumIDs()) {
+      object oObj = dom.GetObject(oID);
+      if(oObj) {
+        string objName = oObj.Name();
+        string trName = oObj.MetaData(metaDataID);
+
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, funcDefault.Split(";")) {
+          if(trName && (trName == listEntry)) {
+            string oldName = funcTranslatedOld.StrValueByIndex(";", idx);
+            if(objName == oldName) {
+              string newName = funcTranslatedNew.StrValueByIndex(";", idx);
+              oObj.Name(newName);
+            }
+          } elseif((objName == listEntry) || (objName == "${"#listEntry#"}")) {
+            string newName = funcTranslatedNew.StrValueByIndex(";", idx);
+            oObj.Name(newName);
+            oObj.AddMetaData(metaDataID, listEntry);
+          }
+          idx = idx + 1;
+        }
+      }
+    }
+
+    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+    ! Rooms
+    string roomDefault      = "roomLivingRoom;roomKitchen;roomBedroom;roomChildrensRoom1;roomChildrensRoom2;roomOffice;roomBathroom;roomGarage;roomHWR;roomGarden;roomTerrace";
+    string roomTranslatedDE = "Wohnzimmer;Küche;Schlafzimmer;Kinderzimmer 1;Kinderzimmer 2;Büro;Badezimmer;Garage;Hauswirtschaftsraum;Garten;Terrasse";
+    string roomTranslatedEN = "Living room;Kitchen;Bed room;Children`s room 1;Children`s room 2;Home office;Bathroom;Garage;Utility room;Garden;Terrace";
+
+    string roomTranslatedNew;
+    string roomTranslatedOld;
+    if(lang == "de") {
+      roomTranslatedNew = roomTranslatedDE;
+      roomTranslatedOld = roomTranslatedEN;
+    } else {
+      roomTranslatedNew = roomTranslatedEN;
+      roomTranslatedOld = roomTranslatedDE;
+    }
+
+    object rooms = dom.GetObject(ID_ROOMS);
+    foreach(oID, rooms.EnumIDs()) {
+      object oObj = dom.GetObject(oID);
+      if(oObj) {
+        string objName = oObj.Name();
+        string trName = oObj.MetaData(metaDataID);
+
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, roomDefault.Split(";")) {
+          if(trName && (trName == listEntry)) {
+            string oldName = roomTranslatedOld.StrValueByIndex(";", idx);
+            if(objName == oldName) {
+              string newName = roomTranslatedNew.StrValueByIndex(";", idx);
+              oObj.Name(newName);
+            }
+          } elseif((objName == listEntry) || (objName == "${"#listEntry#"}")) {
+            string newName = roomTranslatedNew.StrValueByIndex(";", idx);
+            oObj.Name(newName);
+            oObj.AddMetaData(metaDataID, listEntry);
+          }
+          idx = idx + 1;
+        }
+      }
+    }
+
+    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+    ! System variables
+    string svDefault       = "sysVarAlarmZone1;sysVarPresence;sysVarAlarmMessages;sysVarServiceMessages;sysVarRainToday;sysVarRainYesterday";
+    string svDefaultMsg    = "sysVarAlarmZone1Msg;sysVarPresenceMsg;sysVarAlarmMessagesCount;sysVarServiceMessagesCount;sysVarRainTodayDescr;sysVarRainYesterdayDescr";
+    string svDefaultValue0 = "sysVarAlarmZone1NotTriggered;sysVarPresenceNotPresent";
+    string svDefaultValue1 = "sysVarAlarmZone1Triggered;sysVarPresencePresent";
+
+    string svTranslatedDE  = "Alarmzone 1;Anwesenheit;Alarmmeldungen;Servicemeldungen;Regen heute;Regen gestern";
+    string svTranslatedEN  = "Alarm zone 1;Presence;Alarm messages;Service messages;Rain today;Rain yesterday";
+    string svTranslatedMsgDE = "Alarmmeldung Alarmzone 1;Anwesenheit;Anzahl Alarmmeldungen;Anzahl Servicemeldungen;Regenmenge aktueller Tag;Regenmenge vorheriger Tag";
+    string svTranslatedMsgEN = "Alarm message alarm zone 1;Presence;Number alarm messages;Number service messages;Rainfall current day;Rainfall previous day";
+    string svTranslatedValue0DE = "nicht ausgelöst;nicht anwesend";
+    string svTranslatedValue0EN = "not triggered;absent";
+    string svTranslatedValue1DE = "ausgelöst;anwesend";
+    string svTranslatedValue1EN = "triggered;present";
+
+    string svTranslatedNew;
+    string svTranslatedOld;
+    string svTranslatedMsgNew;
+    string svTranslatedMsgOld;
+    string svTranslatedValue0New;
+    string svTranslatedValue0Old;
+    string svTranslatedValue1New;
+    string svTranslatedValue1Old;
+
+    if(lang == "de") {
+      svTranslatedNew = svTranslatedDE;
+      svTranslatedOld = svTranslatedEN;
+      svTranslatedMsgNew = svTranslatedMsgDE;
+      svTranslatedMsgOld = svTranslatedMsgEN;
+      svTranslatedValue0New = svTranslatedValue0DE;
+      svTranslatedValue0Old = svTranslatedValue0EN;
+      svTranslatedValue1New = svTranslatedValue1DE;
+      svTranslatedValue1Old = svTranslatedValue1EN;
+    } else {
+      svTranslatedNew = svTranslatedEN;
+      svTranslatedOld = svTranslatedDE;
+      svTranslatedMsgNew = svTranslatedMsgEN;
+      svTranslatedMsgOld = svTranslatedMsgDE;
+      svTranslatedValue0New = svTranslatedValue0EN;
+      svTranslatedValue0Old = svTranslatedValue0DE;
+      svTranslatedValue1New = svTranslatedValue1EN;
+      svTranslatedValue1Old = svTranslatedValue1DE;
+    }
+
+    object svs = dom.GetObject(ID_SYSTEM_VARIABLES);
+    foreach(oID, svs.EnumIDs()) {
+      object oObj = dom.GetObject(oID);
+      if(oObj) {
+        ! Name
+        string objName = oObj.Name();
+        string trName = oObj.MetaData(metaDataID);
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, svDefault.Split(";")) {
+          if(trName && (trName == listEntry)) {
+            string oldName = svTranslatedOld.StrValueByIndex(";", idx);
+            if(objName == oldName) {
+              string newName = svTranslatedNew.StrValueByIndex(";", idx);
+              oObj.Name(newName);
+            }
+          } elseif((objName == listEntry) || (objName == "${"#listEntry#"}")) {
+            string newName = svTranslatedNew.StrValueByIndex(";", idx);
+            oObj.Name(newName);
+            oObj.AddMetaData(metaDataID, listEntry);
+          }
+          idx = idx + 1;
+        }
+
+        ! DPInfo
+        string objMsg = oObj.DPInfo();
+        string trNameMsg = oObj.MetaData(metaDataID # "Msg");
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, svDefaultMsg.Split(";")) {
+          if(trNameMsg && (trNameMsg == listEntry)) {
+            string oldMsg = svTranslatedMsgOld.StrValueByIndex(";", idx);
+            if(objMsg == oldMsg) {
+              string newMsg = svTranslatedMsgNew.StrValueByIndex(";", idx);
+              oObj.DPInfo(newMsg);
+            }
+          } elseif((objMsg == listEntry) || (objMsg == "${"#listEntry#"}")) {
+            string newMsg = svTranslatedMsgNew.StrValueByIndex(";", idx);
+            oObj.DPInfo(newMsg);
+            oObj.AddMetaData(metaDataID # "Msg", listEntry);
+          }
+          idx = idx + 1;
+        }
+
+        ! ValueName0
+        string objValue0 = oObj.ValueName0();
+        string trNameValue0 = oObj.MetaData(metaDataID # "Value0");
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, svDefaultValue0.Split(";")) {
+          if(trNameValue0 && (trNameValue0 == listEntry)) {
+            string oldValue0 = svTranslatedValue0Old.StrValueByIndex(";", idx);
+            if(objValue0 == oldValue0) {
+              string newValue0 = svTranslatedValue0New.StrValueByIndex(";", idx);
+              oObj.ValueName0(newValue0);
+            }
+          } elseif((objValue0 == listEntry) || (objValue0 == "${"#listEntry#"}")) {
+            string newValue0 = svTranslatedValue0New.StrValueByIndex(";", idx);
+            oObj.ValueName0(newValue0);
+            oObj.AddMetaData(metaDataID # "Value0", listEntry);
+          }
+          idx = idx + 1;
+        }
+
+        ! ValueName1
+        string objValue1 = oObj.ValueName1();
+        string trNameValue1 = oObj.MetaData(metaDataID # "Value1");
+        integer idx = 0;
+        string listEntry;
+        foreach(listEntry, svDefaultValue1.Split(";")) {
+          if(trNameValue1 && (trNameValue1 == listEntry)) {
+            string oldValue1 = svTranslatedValue1Old.StrValueByIndex(";", idx);
+            if(objValue1 == oldValue1) {
+              string newValue1 = svTranslatedValue1New.StrValueByIndex(";", idx);
+              oObj.ValueName1(newValue1);
+            }
+          } elseif((objValue1 == listEntry) || (objValue1 == "${"#listEntry#"}")) {
+            string newValue1 = svTranslatedValue1New.StrValueByIndex(";", idx);
+            oObj.ValueName1(newValue1);
+            oObj.AddMetaData(metaDataID # "Value1", listEntry);
+          }
+          idx = idx + 1;
+        }
+      }
+    }
+
+    ! make sure the changes are saved immediately
+    system.Save();
+
+    Write("true");
+  }
+
+  set result [hmscript $script args]
+  return $result
+}
+
+# set the system language to lang
+set result [setSystemLanguage [array get args]]
+
+if { $result == "true" } {
+  # create /etc/config/systemLanguage with the
+  # language as a content
+  set fd [open /etc/config/systemLanguage w]
+  puts -nonewline $fd $args(lang)
+  close $fd
+}
+
+jsonrpc_response $result
--- occu/WebUI/www/rega/pages/msg/systemLanguageConfig.htm.orig
+++ occu/WebUI/www/rega/pages/msg/systemLanguageConfig.htm
@@ -0,0 +1,62 @@
+<div class="popupTitle">
+  <%
+  Write(system.GetVar("title"));
+  %>
+</div>
+
+<div class="CLASS01400">
+  <table class="popupTableScript CLASS01401" cellpadding="0" cellspacing="0">
+    <tr>
+    <th class="TblHeaderUserConfig">${thChooseSystemLanguage}</th>
+    <th class="TblHeaderUserConfig">${thChooseSystemLanguageNote}</th>
+    </tr>
+    
+    <tr>
+    
+    <td class="CLASS01402" style='text-align: center; vertical-align:middle;'>
+    <table style="margin:auto;">
+    <tr><td style='text-align: center; vertical-align:middle;'><div>
+      <select id="cbLang">
+        <option value="de">${selectLangDE}</option>
+        <option value="en">${selectLangUK}</option>
+       </select></div></td>
+       </tr>
+       </table>
+    </td>
+    
+    <td class="CLASS01403">
+
+    <span class="CLASS01404">${hintSetSystemLanguageNoteRow1}</span><br/>
+    <span class="CLASS01405">${hintSetSystemLanguageNoteRow2}</span>
+
+    </td>
+
+    </tr>
+
+    <tr class="popupTableRow">
+    <td class="CLASS01406" colspan="3">
+      <table>
+      <tr>
+       <td width="10%" style='text-align: center; vertical-align:middle;'><div class="FooterButton CLASS01408" onclick="doSystemLanguageConfig();">${footerBtnOk}</div></td>
+	   <td width="80%"></td>
+       <td width="10%" style='text-align: center; vertical-align:middle;'><div class="FooterButton CLASS01408" onclick="cancelSystemLanguageConfig();">${footerBtnCancel}</div></td>
+      </tr>
+      </table>
+    </td>
+    </tr>
+  </table>
+</div>
+<script type="text/javascript">
+  var lang = homematic('CCU.getSystemLanguage');
+  if(lang === 'de' || lang === 'en') {
+    $('cbLang').value = lang;
+  }
+  doSystemLanguageConfig = function() {
+    var selValue = $("cbLang")[$("cbLang").selectedIndex].value;
+    homematic("CCU.setSystemLanguage", {'lang': selValue});
+    PopupClose();
+  };
+  cancelSystemLanguageConfig = function() {
+    PopupClose();
+  };
+</script>
--- occu/WebUI/www/rega/pages/tabs/admin/userAdministration.htm.orig
+++ occu/WebUI/www/rega/pages/tabs/admin/userAdministration.htm
@@ -173,6 +173,7 @@
     s += "<td style='text-align: center; vertical-align: middle;'><div class='FooterButton' onclick='WebUI.goBack()'>${footerBtnPageBack}</div></td>";
     s += "<td style='text-align: center; vertical-align: middle;'><div class='FooterButton' onclick='newUser();'>${footerBtnNew}</div></td>";
     s += "<td  style='text-align:center; vertical-align: middle;'><div class='FooterButton CLASS05305' onclick='showAutoLogin()'>${footerBtnAutoLogin}</div></td>";
+    s += "<td  style='text-align:center; vertical-align: middle;'><div class='FooterButton CLASS05305' onclick='showSystemLanguage()'>${footerBtnSystemLanguage}</div></td>";
   s += "</tr>";
   s += "</table>";
 
@@ -210,6 +211,10 @@
     CreatePopup(ID_AUTO_LOGIN_CONFIG);
   }
 
+  showSystemLanguage = function() {
+    CreatePopup(ID_SYSTEM_LANGUAGE_CONFIG);
+  }
+  
   translatePage("#userAdmin");
   jQuery("#userAdmin").show();
 
--- occu/WebUI/www/webui/js/lang/de/translate.lang.js.orig
+++ occu/WebUI/www/webui/js/lang/de/translate.lang.js
@@ -90,6 +90,7 @@
     "footerBtnCloseTree" : "Baumstruktur schlie%DFen",
     "footerBtnEdit" : "Bearbeiten",
     "footerBtnAutoLogin" : "Automatisches<br/>Anmelden",
+    "footerBtnSystemLanguage" : "Systemsprache<br />festlegen",
     "footerBtnVirtualChannelsShow" : "Virtuelle Kan%E4le anzeigen",
     "footerBtnVirtualChannelsHide" : "Virtuelle Kan%E4le ausblenden",
     "footerBtnSaveNewFav" : "Auswahl als neue<br />Favoritenseite speichern",
@@ -159,6 +160,8 @@
     "thPhoneNumber" : "Telefonnummer",
     "thAutomaticLogin" : "Automatisches<br/>Anmelden",
     "thChooseUser" : "Benutzerauswahl",
+    "thChooseSystemLanguage" : "Systemsprache ausw%E4hlen",
+    "thChooseSystemLanguageNote" : "Hinweis",
     "thSafetyNote" : "Sicherheitshinweis",
     "thGateway" : "Gateway",
     "thAccessCode" : "Zugriffscode",
@@ -244,6 +247,8 @@
     "hintUsrAutoLoginRow2" : "Eine automatische Anmeldung erm%F6glicht die Systemanmeldung ohne Eingabe von Benutzernamen und Passwort.<br/>",
     "hintUsrAutoLoginRow3" : "Der ausgew%E4hlte Benutzer wird automatisch ohne weitere Pr%FCfung angemeldet. Das System ist somit nicht mehr gegen externen Zugriff gesch%FCtzt.<br />",
     "hintUsrAutoLoginRow4" : "Der Zugriff auf andere Benutzerkonten erfolgt %FCber 'Abmelden' und entsprechender Neuanmeldung.<br />",
+    "hintSetSystemLanguageNoteRow1" : "Bitte beachten:",
+    "hintSetSystemLanguageNoteRow2" : "Durch setzen der Systemsprache der CCU werden interne Standardbezeichnungen von R%E4umen, Gewerken, Standard-Systemvariablen, usw. auf die ausgew%E4hlte Sprache gesetzt. Bereits manuell angepasste Bezeichnungen werden von dieser %C4nderung jedoch nicht erfasst und behalten Ihre Namensgebung. Eine sp%E4tere Anpassung der Systemsprache ist weiterhin jederzeit m%F6glich.",
     "profileSettings" : "Profileinstellung",
     "profileSettingsSender" : "Profileinstellung - Sender",
     "profileSettingsReceiver" : "Profileinstellung - Empf%E4nger",
@@ -420,6 +425,7 @@
     "dialogStateInfoDataTransferToDeviceSuccess" : "Statusinfo: Daten%FCbertragung erfolgreich",
     "dialogWarningDataTransferToDeviceNotPossible" : "Achtung! Daten%FCbertragung nicht m%F6glich",
     "dialogConfigAutomaticLogin" : "Konfiguration - Automatisches Anmelden",
+    "dialogConfigSystemLanguage" : "Konfiguration - Systemsprache",
     "dialogChooseBidCosInterface" : "Auswahl BidCos-Interface",
     "dialogChooseChannel" : "Kanalauswahl",
     "dialogRestartSafeModeTitle" : "Neustart",
--- occu/WebUI/www/webui/js/lang/en/translate.lang.js.orig
+++ occu/WebUI/www/webui/js/lang/en/translate.lang.js
@@ -89,6 +89,7 @@
     "footerBtnCloseTree" : "Close tree structure",
     "footerBtnEdit" : "Edit",
     "footerBtnAutoLogin" : "Log in<br/>automatically",
+    "footerBtnSystemLanguage" : "Set system<br/>language",
     "footerBtnVirtualChannelsShow" : "Show virtual channels",
     "footerBtnVirtualChannelsHide" : "Hide virtual channels",
     "footerBtnSaveNewFav" : "Save selection as new<br/>favourites page",
@@ -158,6 +159,8 @@
     "thPhoneNumber" : "Phone number",
     "thAutomaticLogin" : "Log in<br/>automatically",
     "thChooseUser" : "User selection",
+    "thChooseSystemLanguage" : "Choose system language",
+    "thChooseSystemLanguageNote" : "Note",
     "thSafetyNote" : "Security alert",
     "thGateway" : "Gateway",
     "thAccessCode" : "Access code",
@@ -243,6 +246,8 @@
     "hintUsrAutoLoginRow2" : "If automatic login is activated you will be logged-in to the system without entering your user name or password.<br/>",
     "hintUsrAutoLoginRow3" : "The selected user will be logged-in automatically without further validation. The system is no longer protected against external influences.<br />",
     "hintUsrAutoLoginRow4" : "You can access other user accounts with click on \"Login\". Afterwards, please login with the user name and password again.",
+    "hintSetSystemLanguageNoteRow1" : "Please note:",
+    "hintSetSystemLanguageNoteRow2" : "By choosing the system language of the CCU, internal names of rooms, functions, standard system variables, etc. will be fixed to the selected language. If you have already manually changed names, they won't be modified by this selection. In addition, choosing a different system language is still possible later on.",
     "profileSettings" : "Profile setting",
     "profileSettingsSender" : "Profile settings - transmitter",
     "profileSettingsReceiver" : "Profile settings - receiver",
@@ -419,6 +424,7 @@
     "dialogStateInfoDataTransferToDeviceSuccess" : "Status info: Data transfer successful",
     "dialogWarningDataTransferToDeviceNotPossible" : "Attention! Unable to transfer data",
     "dialogConfigAutomaticLogin" : "Configuration - automatic login",
+    "dialogConfigSystemLanguage" : "Configuration - system language",
     "dialogChooseBidCosInterface" : "Selection BidCos-Interface",
     "dialogChooseChannel" : "Channel selection",
     "dialogRestartSafeModeTitle" : "Restart",
--- occu/WebUI/www/webui/webui.js.orig
+++ occu/WebUI/www/webui/webui.js
@@ -7011,6 +7011,11 @@
             new MessageBox.show(translateKey("dglUserNewFwSettingsTitle"), translateKey("dglUserNewFwSettingsContent"));
             homematic("CCU.setUserAckInstallWizard", {'userName': usrName});
           }
+
+          // open the systemLanguage config dialog if no systemLanguage was selected yet
+          if (homematic('CCU.getSystemLanguage') === 'none') {
+            CreatePopup(ID_SYSTEM_LANGUAGE_CONFIG);
+          }
         }
       }
     } else {
@@ -20669,6 +20674,10 @@
   
   this.leave = function()
   {
+    // open the systemLanguage config dialog if no systemLanguage was selected yet
+    if (homematic('CCU.getSystemLanguage') === 'none') {
+      CreatePopup(ID_SYSTEM_LANGUAGE_CONFIG);
+    }
   };
 
   this.resize = function()
@@ -26732,7 +26741,12 @@
         this.setWidth(800);
         this.setFile( "/pages/msg/autoLoginConfig.htm" );
         break;
-       case ID_CHOOSE_LED:
+      case ID_SYSTEM_LANGUAGE_CONFIG:
+        this.setTitle( translateKey("dialogConfigSystemLanguage") /*"Systemsprache waehlen - Konfiguration" */);
+        this.setWidth(800);
+        this.setFile( "/pages/msg/systemLanguageConfig.htm" );
+        break;
+        case ID_CHOOSE_LED:
         this.setTitle( translateKey("dialogEnterValue") /*"Wert eingeben" */);
         this.addToPostBody( 'string type = "'+this.type+'";' );
         this.setWidth(800);
@@ -27551,6 +27565,7 @@
 ID_SET_OUCFM_MODE        = 1023;
 ID_SET_STATUS_DISPLAY    = 1024;
 ID_BIDCOS_INTERFACE = 1025;
+ID_SYSTEM_LANGUAGE_CONFIG = 2001;
 
 nUA = navigator.userAgent;
 NAV_IE = false;
