--- occu/WebUI/www/api/methods.conf.orig
+++ occu/WebUI/www/api/methods.conf
@@ -561,6 +561,13 @@
   ARGUMENTS {_session_id_ id isVisible}
 }
 
+Device.setEnabledServiceMsg {
+  LEVEL ADMIN
+  SCRIPT_FILE device/setenabledservicemsg.tcl
+  INFO {Legt fest, ob das Gerät Servicemeldungen erzeugt oder nicht}
+  ARGUMENTS {_session_id_ id isEnabled}
+}
+
 Event.subscribe {
   LEVEL GUEST
   SCRIPT_FILE event/subscribe.tcl
--- occu/WebUI/www/api/methods/device/get.tcl.orig
+++ occu/WebUI/www/api/methods/device/get.tcl
@@ -34,7 +34,15 @@
 !   Write(" DEVICE_TYPE {"# device.HssType() # "}"); 
     Write(" DEVICE_TYPE {"# device.Label() # "}");
     Write(" GROUP_ONLY {"# device.MetaData("operateGroupOnly") # "}");
-  
+ 
+    Write(" SERVICE_MSG {");
+    if (device.MetaData("enabledServiceMsg") == null) {
+      Write("true");
+    } else {
+      Write(device.MetaData("enabledServiceMsg"));
+    }
+    Write("}");
+ 
     Write(" CHANNELS {"); 
     if (device.TypeName() == "DEVICE")
     {
@@ -138,6 +146,7 @@
 append result ",\"interface\":[json_toString $device(INTERFACE)]"
 append result ",\"type\":[json_toString $device(DEVICE_TYPE)]"
 append result ",\"operateGroupOnly\":[json_toString $device(GROUP_ONLY)]"
+append result ",\"enabledServiceMsg\":[json_toString $device(SERVICE_MSG)]"
 
 set first 1
 append result ",\"channels\":\["
--- occu/WebUI/www/api/methods/device/listalldetail.tcl.orig
+++ occu/WebUI/www/api/methods/device/listalldetail.tcl
@@ -35,6 +35,15 @@
     }
 
     Write(" GROUP_ONLY {"# device.MetaData("operateGroupOnly") # "}");
+
+    Write(" SERVICE_MSG {");
+    if (device.MetaData("enabledServiceMsg") == null) {
+      Write("true");
+    } else {
+      Write(device.MetaData("enabledServiceMsg"));
+    }
+    Write("}");
+ 
     Write(" CHANNELS {");
 
     var first = true;
@@ -197,6 +206,7 @@
   append result ",\"type\":[json_toString $device(DEVICE_TYPE)]"
   append result ",\"operateGroupOnly\":[json_toString $device(GROUP_ONLY)]"
   append result ",\"isReady\":[json_toString $device(READY_CONFIG)]"
+  append result ",\"enabledServiceMsg\":[json_toString $device(SERVICE_MSG)]"
 
 
 #
--- occu/WebUI/www/api/methods/device/setenabledservicemsg.tcl.orig
+++ occu/WebUI/www/api/methods/device/setenabledservicemsg.tcl
@@ -0,0 +1,74 @@
+##
+# Device.setEnabledServiceMsg
+# Legt fest, ob das Gerät Servicemeldungen erzeugt oder nicht
+#
+# Parameter:
+#   id:        [string] Id des Gerätes
+#   isEnabled: [bool]   Gerät erzeugt Servicemeldungen (true) oder nicht (false)
+##
+
+set script {
+  boolean bResult = false;
+  object oDevice = dom.GetObject(id);
+  if(oDevice != null)
+  {
+    boolean bEnabled = false;
+    if(isEnabled == "true")
+    {
+      bEnabled = true;
+    }
+
+    if(oDevice.MetaData("enabledServiceMsg") == null)
+    {
+      if(bEnabled == false)
+      {
+        oDevice.AddMetaData("enabledServiceMsg", bEnabled);
+      }
+    }
+    else
+    {
+      oDevice.MetaData("enabledServiceMsg", bEnabled);
+    }
+
+    object oLastAlarmDP = null;
+    object oServices = dom.GetObject(ID_SERVICES);
+    string sAID;
+    foreach( sAID, oServices.EnumIDs() )
+    {
+      object oAlarm = dom.GetObject(sAID);
+      if(oAlarm != null)
+      {
+        object oAlarmTrigger = dom.GetObject(oAlarm.AlTriggerDP());
+        if(oAlarmTrigger != null)
+        {
+          object oChannel = dom.GetObject(oAlarmTrigger.Channel());
+          if(oChannel != null)
+          {
+            var device = oChannel.Device();
+            if(device == oDevice.ID())
+            {
+              oAlarm.Enabled(bEnabled);
+              oLastAlarmDP = oAlarm;
+            }
+          }
+        }
+      }
+    }
+
+    if(oLastAlarmDP != null)
+    {
+      oLastAlarmDP.State(oLastAlarmDP.Value());
+      dom.RTUpdate(0);
+      bResult = true;
+    }
+  }
+  Write(bResult);
+}
+
+set result [hmscript $script args]
+
+if {("true" == $result) || ("false" == $result)} then {
+  jsonrpc_response $result
+} else {
+  jsonrpc_error 500 "homematic script error"
+}
--- occu/WebUI/www/rega/esp/system.fn.orig
+++ occu/WebUI/www/rega/esp/system.fn
@@ -337,7 +337,7 @@
     {
       if( oAlarm.IsTypeOf(OT_ALARMDP) )
       {
-        if( oAlarm.AlState() == asOncoming )
+        if( (oAlarm.Used() == true) && (oAlarm.Enabled() == true) && (oAlarm.AlState() == asOncoming) )
         {
           iSvcCount = iSvcCount + 1;
           string sTimestamp = oAlarm.AlOccurrenceTime();
--- occu/WebUI/www/rega/pages/tabs/statusviews/serviceMessages.htm.orig
+++ occu/WebUI/www/rega/pages/tabs/statusviews/serviceMessages.htm
@@ -178,7 +178,7 @@
     {
       if( oAlarm.IsTypeOf(OT_ALARMDP) )
       {
-        if( oAlarm.AlState() == asOncoming )
+        if( (oAlarm.Used() == true) && (oAlarm.Enabled() == true) && (oAlarm.AlState() == asOncoming) )
         {
           iSvcCount = iSvcCount + 1;
           string sTimestamp = oAlarm.AlOccurrenceTime();
--- occu/WebUI/www/webui/js/lang/de/translate.lang.extension.js.orig
+++ occu/WebUI/www/webui/js/lang/de/translate.lang.extension.js
@@ -80,6 +80,7 @@
     "generalDeviceChannelConfigLblUsable" : "Bedienbar:",
     "generalDeviceChannelConfigLblVisible" : "Sichtbar:",
     "generalDeviceChannelConfigLblLogged" : "Protokolliert:",
+    "generalDeviceChannelConfigLblServiceMsg": "Servicemeldungen:",
     "generalDeviceChannelConfigLblFuncTest" : "Funktionstest",
     "generalChannelConfigLblRooms" : "R%E4ume",
     "generalChannelConfigLblFunctions" : "Gewerke",
--- occu/WebUI/www/webui/js/lang/en/translate.lang.extension.js.orig
+++ occu/WebUI/www/webui/js/lang/en/translate.lang.extension.js
@@ -80,6 +80,7 @@
     "generalDeviceChannelConfigLblUsable": "Operable:",
     "generalDeviceChannelConfigLblVisible": "Visible:",
     "generalDeviceChannelConfigLblLogged": "Logged:",
+    "generalDeviceChannelConfigLblServiceMsg": "Service messages:",
     "generalDeviceChannelConfigLblFuncTest": "Functional test",
     "generalChannelConfigLblRooms": "Rooms",
     "generalChannelConfigLblFunctions": "Functions",
--- occu/WebUI/www/webui/webui.js.orig
+++ occu/WebUI/www/webui/webui.js
@@ -246,6 +246,7 @@
         <tr id=\"btnEnableDeviceLogging\"><td name=\"generalDeviceChannelConfigLblLogged\">Protokolliert:<\/td><td><input id=\"DeviceConfigDialog_isLogged\" type=\"checkbox\" onclick=\"DeviceConfigDialog.isLoggingChanged=true;\" {if device.isLogged} checked=\"checked\" {\/if} {if !device.isLogable} disabled=\"disabled\" readonly=\"readonly\" {\/if}\/><\/td><\/tr>\n
 \n
         <tr id=\"trAllChnVisible\" class=\"hidden\"><td name=\"lblAllChannelsVisible\">Alle Kan%E4le sichtbar:<\/td><td><input id=\"DeviceConfigDialog_isVisible\" type=\"checkbox\" onclick=\"DeviceConfigDialog.isVisibilityChanged=true;\"\/><\/td><\/tr>\n
+        <tr id=\"btnEnableDeviceServiceMsg\"><td name=\"generalDeviceChannelConfigLblServiceMsg\">Servicemeldungen:<\/td><td><input id=\"DeviceConfigDialog_enabledServiceMsg\" type=\"checkbox\" onclick=\"DeviceConfigDialog.enabledServiceMsgChanged=true;\" {if device.enabledServiceMsg} checked=\"checked\" {\/if} \/><\/td><\/tr>\n
       <\/table>\n
     <\/div>\n
     \n
@@ -10428,6 +10429,7 @@
 
       this.interfaceName = data["interface"];
       this.isReadyConfig = data["isReady"];
+      this.enabledServiceMsg = (data["enabledServiceMsg"] == "true") ? true : false;
       this.thumbnailHTML = deviceType.getThumbnailHTML();
       this.imageHTML = deviceType.getImageHTML();
       this.deviceType = deviceType;
@@ -10514,6 +10516,23 @@
   {
   },  
 
+  /**
+   * Legt fest, ob das Geraet Servicemeldungen auslöst oder nicht
+   **/
+  setEnabledServiceMsg: function(enabledServiceMsg)
+  {
+    if (this.enabledServiceMsg != enabledServiceMsg)
+    {
+      var result = homematic("Device.setEnabledServiceMsg", {id: this.id, isEnabled: enabledServiceMsg});
+      if (typeof(result) == "boolean" && result === true)
+      {
+        this.enabledServiceMsg = enabledServiceMsg;
+      }
+    }
+    
+    return this.enabledServiceMsg;
+  },
+
   setDeviceInputCheck: function() {
     this.deviceInputCheck = true;
   },
@@ -12799,6 +12818,7 @@
   USABLE_ID: "DeviceConfigDialog_isUsable",
   VISIBLE_ID: "DeviceConfigDialog_isVisible",
   LOGGED_ID: "DeviceConfigDialog_isLogged",
+  SERVICEMSG_ID: "DeviceConfigDialog_enabledServiceMsg",
   TEST_RESULT_ID: "DeviceConfigDialogTestResult",
   RESULT_OK: 1,
   RESULT_ABORT: 0,
@@ -12824,6 +12844,7 @@
     this.isVisibilityChanged = false;
     this.isUsabilityChanged = false;
     this.isLoggingChanged = false;   
+    this.enabledServiceMsgChanged = false;
     this.callback = callback;
     this.layer = document.createElement("div");
     this.layer.id = this.LAYER_ID;
@@ -12890,6 +12911,8 @@
         if (this.isUsabilityChanged) { channel.setUsability(isUsable); }
         if (this.isLoggingChanged) { channel.setLogging(isLogged); }
       }, this);
+      var enabledServiceMsg = $(this.SERVICEMSG_ID).checked;
+      if (this.enabledServiceMsgChanged) { this.device.setEnabledServiceMsg(enabledServiceMsg); }
 
       this.close(this.RESULT_OK);
     }
